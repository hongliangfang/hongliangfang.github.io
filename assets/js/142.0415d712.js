(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{459:function(s,e,a){"use strict";a.r(e);var n=a(7),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("2023-09-22")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzAxMDkxODM1Ng==&mid=2247521923&idx=1&sn=8161dadb6ad8ff8d1616137e61b35f1c&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[s._v("单细胞+芯片+转录组测序的数据挖掘文章一比一复现 "),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("文章：\nFrontier，Integration of Single-Cell RNA Sequencing and Bulk RNA Sequencing Data to Establish and Validate a Prognostic Model for Patients With "),e("strong",[s._v("Lung Adenocarcinoma")])]),s._v(" "),e("p",[s._v("数据")]),s._v(" "),e("h3",{attrs:{id:"分析思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分析思路"}},[s._v("#")]),s._v(" 分析思路")]),s._v(" "),e("ul",[e("li",[s._v("单细胞分群，功能分析，拟时序，细胞通讯")]),s._v(" "),e("li",[s._v("TCGA--DEG，GO，KEGG，")]),s._v(" "),e("li",[s._v("WGCNA--hub genes，两者交集")]),s._v(" "),e("li",[s._v("单因素COX？？，非负矩阵分解？？cluster生存分析？？免疫浸润？？")]),s._v(" "),e("li",[s._v("许多评分？？应该是想证明临床相关")])]),s._v(" "),e("div",{staticClass:"language-R line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[s._v("ls"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出所有对象，函数/变量/数据集等")]),s._v("\nls"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pos "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package:dplyr"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#看看加载包的所有函数")]),s._v("\nhelp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("package "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dplyr"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#look help file")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("具体代码和功能注释")]),s._v(" "),e("h3",{attrs:{id:"合并数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并数据"}},[s._v("#")]),s._v(" 合并数据")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("library(Seurat)  \nlibrary(harmony)  #去批次\nlibrary(dplyr)    #处理数据框\nlibrary(stringr)  #处理字符串\nrm(list = ls())  \n\n# 多个数据读取与合并  \nrawdata_path <- './rawdata'  \nfilename <- list.files(rawdata_path)  \nrawdata_path <- paste(rawdata_path,filename,sep = '/')  \nsceList <- lapply(rawdata_path, function(x){  \n\tobj <- CreateSeuratObject(counts = Read10X(x),  \n                             project = str_split(x,'/')[[1]][3])})  \nnames(sceList) <- filename\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("rawdata_path，操作出来批量的样本名文件夹（下面就是R10X的三个数据）\nsceList，操作出来若干seurat对象\nproject和name？？")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#合并数据，疾病和正常两组\nsce <- merge(sceList[[1]],sceList[-1],add.cell.ids = names(sceList),project = 'luad')  \nsce@meta.data$group <- str_split(sce@meta.data$orig.ident,'_',simplify = T)[,2]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("两个中括号内的1&一个中括号的-1")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 查看线粒体(MT开头)、核糖体(RPS/RPL开头)、血红细胞所占比例  \n\n\'^RP[SL]\'可以匹配那些以"RP"开头并后面跟着字母"S"或"L"的字符串\n\'^HB[^(P)]\'可以匹配那些以"HB"开头并后面跟着不是字母"P"的字符串\nvalue默认为False返回索引位置；True返回匹配到的实际字符串\n\ngrep(\'^MT\',x=rownames(sce@assays$RNA@data),value = T)  \ngrep(\'^RP[SL]\',x=rownames(sce@assays$RNA@data),value = T)  \ngrep(\'^HB[^(P)]\',x=rownames(sce@assays$RNA@data),value = T)  \n  \nsce <- PercentageFeatureSet(sce,\'^MT\',col.name = \'percent_MT\')  \nsce <- PercentageFeatureSet(sce,\'^RP[SL]\',col.name = \'percent_RP\')  \nsce <- PercentageFeatureSet(sce,\'^HB[^(P)]\',col.name = \'percent_HB\')  \nVlnPlot(sce,features = "nCount_RNA",pt.size = 0,y.max = 10000)  \n  \nVlnPlot(sce,features = "nFeature_RNA",pt.size = 0,y.max = 2500)  \nVlnPlot(sce,features = "percent_MT",pt.size = 0)  \nVlnPlot(sce,features = "percent_RP",pt.size = 0)  \nVlnPlot(sce,features = "percent_HB",pt.size = 0,y.max = 0.1)  \nVlnPlot(sce,features = c("nCount_RNA","nFeature_RNA","percent_MT"),pt.size = 0,group.by = \'orig.ident\')\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("grep返回（行为基因）的字符串，返回之后给谁跑到哪里去了？？\ngrep（可能）搜到并返回线粒体/核糖体/红细胞基因\nPercentFeatureSet给细胞再设置上metadata之线粒体/核糖体/血红蛋白基因比例")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 过滤细胞  \nsce <- subset(sce,subset = nCount_RNA>1000 & nFeature_RNA>300 & percent_MT<25)  \n# 过滤基因  \nsce <- sce[rowSums(sce@assays$RNA@counts>0)>3,]  \n# 过滤线粒体、核糖体、血红细胞进占比高的细胞  \nsce <- subset(sce,subset = percent_MT<25 & percent_RP<30 & percent_HB<0.1)\n# 查看多少基因（行）多少细胞（列）\ndim(sce)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("细胞，测出太多数量count的，太多种feature的，太多线粒体比例的都不要\n基因，逻辑值--和大于3个细胞--的行切片保留，是筛选基因")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 细胞周期评分\n# S.Score较高的为S期，G2M.Score较高的为G2M期，都比较低的为G1期\n# DNA合成前期（G1期）、DNA合成期（S期）与DNA合成后期（G2期）、分裂就是M期（又分前中后末）、G2M，一起，意思一般是G2合成后紧贴着M期\ns_feature <- cc.genes.updated.2019$s.genes    #s期的标记基因\ng2m_feature <- cc.genes.updated.2019$g2m.genes  \nsce <- CellCycleScoring(sce,  \n                        s.features = s_feature,  \n                        g2m.features = g2m_feature,  \n                        set.ident = T)  \nVlnPlot(sce,features = c('S.Score','G2M.Score'),group.by = 'orig.ident',pt.size = 0)  \nsaveRDS(sce,'sce_qc.rds')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("cc.genes.updated.2019$s.genes，seurat包中的数据集合")]),s._v(" "),e("p",[s._v("CellCycleScoring细胞周期评分")]),s._v(" "),e("p",[s._v("VlnPlot可视化看看分数")]),s._v(" "),e("h3",{attrs:{id:"去批次效应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#去批次效应"}},[s._v("#")]),s._v(" 去批次效应")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# harmony去除批次效应\nlibrary(harmony)  \nlibrary(dplyr)  \nlibrary(Seurat)  \nlibrary(clustree)  \nrm(list = ls())  \n\n# harmony之前看一次效果\nsce <- readRDS('sce_qc.rds')  \nsce <- NormalizeData(sce,  \n                     normalization.method = 'LogNormalize',  \n                     scale.factor = 10000)  \nsce <- FindVariableFeatures(sce,  \n                            selection.method = \"vst\",  \n                            nfeatures = 2000)  \nsce <- ScaleData(sce)      # 默认用variableFeature做scale  \nsce <- RunPCA(sce,features = VariableFeatures(sce))  \nDimPlot(sce,reduction = 'pca',group.by = 'group')\n\n\n# harmony之后再看一次效果\nsce <- RunHarmony(sce,group.by.vars = 'orig.ident')\n\nElbowPlot(sce,reduction = 'harmony')\nsce <- RunUMAP(sce,dims = 1:10,reduction = 'harmony')\nsce <- RunTSNE(sce,dims = 1:10,reduction = 'harmony')\n\nDimPlot(sce,reduction = 'umap',label = T,group.by = 'group')\nDimPlot(sce,reduction = 'tsne',label = T,group.by = 'group')\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("sce <- FindNeighbors(sce,reduction = 'harmony',dims = 1:10)  \nsce_res <- FindClusters(sce_res,resolution = 0.8)  \n# 设置不同的分辨率查看分组情况  \nsce_res <- sce  \nfor (i in c(0.01, 0.05, 0.1, 0.2, 0.3, 0.5,0.8,1)){  \n  sce_res <- FindClusters(sce_res,resolution = i)  \n}  # 这个循环不错诶，可以看看哪种分辨率最合适\nclustree(sce_res,prefix = 'RNA_snn_res.')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("FindNeighbors计算细胞间距离")]),s._v(" "),e("p",[s._v("FindClusters确定分群")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 确定分群分辨率为0.5\nsce <- FindClusters(sce,resolution = 0.5)  \nsaveRDS(sce,file = 'step2_harmony.rds')  \n  \nDimPlot(sce,reduction = 'umap',group.by = 'orig.ident')  \nDimPlot(sce,reduction = 'umap',group.by = 'seurat_clusters')\n\nsce@meta.data[1:3,] # meta.data相当于anndata的obs.m、对obs的各种统计信息\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"细胞分群注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#细胞分群注释"}},[s._v("#")]),s._v(" 细胞分群注释")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 注释细胞\nlibrary(SingleR)  \nlibrary(celldex)  \nlibrary(Seurat)  \nlibrary(dplyr)  \nlibrary(stringr)  \nlibrary(pheatmap)  \nlibrary(ReactomeGSA)  \nlibrary(monocle)  \nlibrary(limma)  \nlibrary(ggplot2)  \nlibrary(msigdbr)  \nlibrary(singleseqgset)  \n  \nrm(list = ls())  \ngc()  \n  \nsce <- readRDS('step2_harmony.rds')  \n\n# singleR注释  \nhpca.se <- HumanPrimaryCellAtlasData() # 获取注释信息（可以先下载rds，load出来）\nbpe.se <- BlueprintEncodeData()  \nanno <- SingleR(sce@assays$RNA@data,  \n                ref = list(BP=bpe.se,HPCA=hpca.se),  \n                labels = list(bpe.se$label.main,hpca.se$label.main),  \n                clusters = sce@meta.data$seurat_clusters  \n                )\ntable(ann%labels)\nplotScoreHeatmap(anno,clusters = anno@rownames,show_colnames = T)\n\nsce@meta.data$singleR_label <- unlist(lapply(sce@meta.data$seurat_clusters, function(x{anno$labels[x]})) # 不知道是否有错误？？？\n\nDimPlot(sce,reduction = 'umap',group.by = 'singleR_label',label = T)\nDimPlot(sce,reduction = 'tsne',group.by = 'singleR_label',label = T)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[s._v("HumanPrimaryCellAtlasData和BluePrintEncodeData，两个SingleR自带的数据库\nann储存注释信息\n若想继续进行亚群注释，取sce子集再降维分群，SingleR注释")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 鉴定关键细胞亚群\ncell_list <- split(colnames(sce), sce$singleR_label)  \n  \ndeg <- c()  \nfor (i in names(cell_list)){  \n  sce_temp <- sce[,colnames(sce) %in% cell_list[[i]]]  \n  sce_temp <- CreateSeuratObject(counts = sce_temp@assays$RNA@counts,  \n                                 meta.data = sce_temp@meta.data,  \n                                 min.cells = 3,  \n                                 min.features = 200)  \n  sce_temp <- NormalizeData(sce_temp)  \n  sce_temp <- FindVariableFeatures(sce_temp)  \n  sce_temp <- ScaleData(sce_temp,vars.to.regress = c('nFeature_RNA','\"percent_MT\"'))  \n  Idents(sce_temp) <- sce_temp$group  \n  sce_temp_markers <- FindAllMarkers(object=sce_temp,  \n                                     only.pos = T,  \n                                     logfc.threshold = 2,  \n                                     min.pct = 0.1)  \n  sce_temp_markers <- sce_temp_markers[order(sce_temp_markers$cluster,sce_temp_markers$avg_log2FC),]  \n  deg_gene <- sce_temp_markers[sce_temp_markers$p_val_adj<0.05,'gene']  \n  deg <- c(deg,length(deg_gene))  \n}  \n  \ndf <- data.frame(cell_type = names(cell_list),deg_gene = deg)\ndf\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[s._v("没看太懂，大致是这种意思，把每种类型的细胞分别拿出来，用FindAllMarkers找出正常和肿瘤之间的差异基因")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 单细胞通路富集\ntemp <- sce  \nIdents(temp) <- temp@meta.data$singleR_label  \nreactome_obj <- analyse_sc_clusters(temp,create_reactome_visualization=T,use_interactors=F)  \npath_ways <- pathways(reactome_obj)  \npath_ways$diff <- rowMax(as.matrix(path_ways[,2:ncol(path_ways)])) - rowMin(as.matrix(path_ways[,2:ncol(path_ways)]))  \npath_ways <- path_ways[order(path_ways$diff,decreasing = T),]  \n  \nplot_gsva_heatmap(reactome_obj,rownames(path_ways)[1:10],margins = c(10,20))  \n  \nsaveRDS(sce,file = 'step3_sce.rds')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("没看懂，有些包是不知道干啥的；估计是开始那一坨包里面的函数\n介绍说是，“用pathway()提取富集出来的结果，每行是一个通路，每列是一种细胞，计算每个通路在7种细胞中表达差异的diff，根据diff排序，画出前10个通路”")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 拟时序分析\nlibrary(Seurat)\nlibrary(monocle)\n\nsce <- readRDS('step3_sce.rds')\n# 1. 将seurat对象转化为monocle的CDS对象sparse_data <- as(as.matrix(sce@assays$RNA@counts),'sparseMatrix')\nmdata <- new('AnnotatedDataFrame',data=sce@meta.data) # 行为cellf\nData <- data.frame(gene_short_name=row.names(sparse_data),row.names = row.names(sparse_data))\nfd <- new('AnnotatedDataFrame',data=fData) # 行为gene 列为gene description\nmonocle_cds <- newCellDataSet(cellData = sparse_data,\n\tphenoData = mdata,                              \n\tfeatureData = fd,                              \n\tlowerDetectionLimit = 0.5,                              \n\texpressionFamily = negbinomial.size())\n\n# 2. 计算size factor和离散度\nmonocle_cds <- estimateSizeFactors(monocle_cds)\nmonocle_cds <- estimateDispersions(monocle_cds)\n\n# 3.过滤低质量细胞\nmonocle_cds <- detectGenes(monocle_cds,min_expr = 0.1)\n\n# 4. 找高变基因、降维分群\n# 用seurat找的高变基因 \nsce_var_gene <- VariableFeatures(sce)\nmonocle_cds <- setOrderingFilter(monocle_cds,sce_var_gene)\nmonocle_cds <- reduceDimension(monocle_cds,num_dim=10,norm_method = 'log',reduction_method = 'tSNE')\nmonocle_cds <- clusterCells(monocle_cds,num_clusters = 10)\n\nplot_cell_clusters(monocle_cds,color_by = 'singleR_label')\n\ndiff_test_gene <- differentialGeneTest(monocle_cds[sce_var_gene,],fullModelFormulaStr = '~singleR_label')\ndiff_gene <- row.names(subset(diff_test_gene,qval<0.01))\nmonocle_cds <- setOrderingFilter(monocle_cds,diff_gene)\n\n# 5. 用reversed graph embedding降维monocle_cds <- reduceDimension(monocle_cds,reduction_method = 'DDRTree')\n\n# 6. 计算细胞拟时间monocle_cds <- orderCells(monocle_cds)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("p",[s._v("第六步报错找公众号上的解决方案（已解决，后续可以直接运行）")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 6. 计算细胞拟时间  \nsource(\'order_cells.R\')  \nlibrary(\'igraph\')  \nmy_ordercell <- function(cds){  \n  root_state = NULL  \n  num_paths = NULL  \n  reverse = NULL  \n  root_cell <- select_root_cell(cds, root_state, reverse)  \n  cds@auxOrderingData <- new.env(hash = TRUE)  \n    \n  if (cds@dim_reduce_type == "DDRTree") {  \n    if (is.null(num_paths) == FALSE) {  \n      message("Warning: num_paths only valid for method \'ICA\' in reduceDimension()")  \n    }  \n    cc_ordering <- extract_ddrtree_ordering(cds, root_cell)  \n    pData(cds)$Pseudotime <- cc_ordering[row.names(pData(cds)), ]$pseudo_time  \n    K_old <- reducedDimK(cds)  \n    old_dp <- cellPairwiseDistances(cds)  \n    old_mst <- minSpanningTree(cds)  \n    old_A <- reducedDimA(cds)  \n    old_W <- reducedDimW(cds)  \n    cds <- project2MST(cds, project_point_to_line_segment)  \n    minSpanningTree(cds) <- cds@auxOrderingData[[cds@dim_reduce_type]]$pr_graph_cell_proj_tree  \n    root_cell_idx <- which(V(old_mst)$name == root_cell, arr.ind = T)  \n    cells_mapped_to_graph_root <- which(cds@auxOrderingData[["DDRTree"]]$pr_graph_cell_proj_closest_vertex == root_cell_idx)  \n    if (length(cells_mapped_to_graph_root) == 0) {  \n      cells_mapped_to_graph_root <- root_cell_idx  \n    }  \n    cells_mapped_to_graph_root <- V(minSpanningTree(cds))[cells_mapped_to_graph_root]$name  \n    tip_leaves <- names(which(degree(minSpanningTree(cds)) == 1))  \n    root_cell <- cells_mapped_to_graph_root[cells_mapped_to_graph_root %in% tip_leaves][1]  \n    if (is.na(root_cell)) {  \n      root_cell <- select_root_cell(cds, root_state, reverse)  \n    }  \n    cds@auxOrderingData[[cds@dim_reduce_type]]$root_cell <- root_cell  \n    cc_ordering_new_pseudotime <- extract_ddrtree_ordering(cds, root_cell)  \n    pData(cds)$Pseudotime <- cc_ordering_new_pseudotime[row.names(pData(cds)), ]$pseudo_time  \n    if (is.null(root_state) == TRUE) {  \n      closest_vertex <- cds@auxOrderingData[["DDRTree"]]$pr_graph_cell_proj_closest_vertex  \n      pData(cds)$State <- cc_ordering[closest_vertex[, 1], ]$cell_state  \n    }  \n  }  \n  cds  \n} \n\nmonocle_cds <- my_ordercell(monocle_cds)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 可以画轨迹的图了  \nplot_cell_trajectory(monocle_cds,color_by = 'Pseudotime')  \nplot_cell_trajectory(monocle_cds,color_by = 'State')  \nplot_cell_trajectory(monocle_cds,color_by = 'singleR_label')  \n  \nplot_cell_trajectory(monocle_cds,color_by = 'singleR_label')+facet_wrap(~singleR_label,nrow = 3)  \n  \nsaveRDS(monocle_cds,file = 'monocle.rds')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("细胞间通讯\nlibrary(CellChat)  \nlibrary(patchwork)  \nlibrary(Seurat)  \nlibrary(dplyr)  \nlibrary(ggalluvial)  \nlibrary(NMF)  \noptions(stringsAsFactors = FALSE)  \nrm(list = ls())  \ngc()  \n  \nsce <- readRDS('step3_sce.rds')  \n  \n# Step1.创建cellchat对象  \ndata.input <- sce@assays$RNA@data  \nmeta.data <- sce@meta.data  \n  \ncellchat <- createCellChat(object=data.input,  \n                           meta = meta.data,  \n                           group.by='singleR_label')  \ncellchat <- addMeta(cellchat,meta = meta.data)  \n  \n# Step2.加载CellChatDB数据库  \ncellchatDB <- CellChatDB.human  \ncellchat@DB <- cellchatDB  \n  \n# Step3.处理表达数据  \ncellchat <- subsetData(cellchat)  \ncellchat <- identifyOverExpressedGenes(cellchat)  \ncellchat <- identifyOverExpressedInteractions(cellchat)  \n  \n# Step4.计算通讯概率，推断细胞通讯网络  这一步很耗时  \ncellchat <- computeCommunProb(cellchat,population.size = F)  \ncellchat <- filterCommunication(cellchat,min.cells = 10)  \n  \n# Step5. 提取预测的细胞通讯网络为data frame  \ndf.net <- subsetCommunication(cellchat)  \ndf.pathway <- subsetCommunication(cellchat,slot.name = 'netP')  \n  \n# Step6. 在信号通路水平推断细胞通讯  \ncellchat <- computeCommunProbPathway(cellchat)  \n  \n# Step7. 计算加和的cell-cell通讯网络  \ncellchat <- aggregateNet(cellchat)  \npar(mfrow = c(1,2))  \nnetVisual_circle(cellchat@net$count,vertex.weight = groupSize,  \n                 weight.scale = T,label.edge = F,  \n                 title.name = 'number of Interaction')  \nnetVisual_circle(cellchat@net$weight,vertex.weight = groupSize,  \n                 weight.scale = T,label.edge = F,  \n                 title.name = 'Interaction Weight')  \n  \nmat <- cellchat@net$weight  \npar(mfrow = c(3,3),xpd=T)  \nfor (i in 1:nrow(mat)){  \n  mat2 <- matrix(0,nrow = nrow(mat),ncol = ncol(mat),  \n                 dimnames = dimnames(mat))  \n  mat2[i,] <- mat[i,]  \n  netVisual_circle(mat2,vertex.weight = groupSize,  \n                   weight.scale = T,edge.weight.max = max(mat),  \n                   title.name = rownames(mat)[i])\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# Step8. 使用层次图（Hierarchical plot），圆圈图（Circle plot）或和弦图（Chord diagram）可视化每个信号通路  \ncellchat@netP$pathways  \npathway.show <- c('SEMA4')  \nvertex.receiver <- c(1,2,3,4)  \nnetVisual_aggregate(cellchat,signaling = pathway.show,  \n                    vertex.receiver = vertex.receiver,  \n                    layout = 'hierarchy')\n\npar(mfrow=c(1,2),xpd=T)  \nnetVisual_aggregate(cellchat,signaling = pathway.show,  \n                    layout = 'circle')  \nnetVisual_aggregate(cellchat,signaling = pathway.show,  \n                    layout = 'circle',label.edge=T)\n\npairLR.CXCL <- extractEnrichedLR(cellchat,signaling = pathway.show,  \n                                 geneLR.return = F)  \nLR.show <- pairLR.CXCL[1,]  \nnetVisual_individual(cellchat,signaling = pathway.show,  \n                     pairLR.use = 'SEMA4A_PLXNB2',  \n                     layout = 'circle')  \n  \nnetVisual_aggregate(cellchat,signaling = pathway.show,layout = 'chord',  \n                    title.name = \"Chord diagram  1\")\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[s._v("额按，啊吧，啊吧吧，后边的分析有TCGA的生存分析，差异基因还理解，但是再往后的免疫浸润，Cox回归等等就不太理解了。。。")]),s._v(" "),e("p",[s._v("算是学到了整合分析吧，一些关于monocle的包还要单独去学学的。")])])}),[],!1,null,null,null);e.default=t.exports}}]);