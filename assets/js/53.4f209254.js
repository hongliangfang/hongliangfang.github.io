(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{371:function(s,e,n){"use strict";n.r(e);var a=n(7),t=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),e("p",[s._v("注意及时修改"),e("code",[s._v("对象的名称")]),s._v("，以及根据目的，进行调整数据的输入，函数的参数！")])]),s._v(" "),e("h3",{attrs:{id:"理解概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理解概述"}},[s._v("#")]),s._v(" 理解概述")]),s._v(" "),e("p",[s._v("参考："),e("a",{attrs:{href:"http://cole-trapnell-lab.github.io/monocle-release/docs/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Monocle2官网"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("strong",[s._v("Pseudotime analysis")])]),s._v(" "),e("p",[s._v("monocle2能干啥？")]),s._v(" "),e("ol",[e("li",[s._v("clustering、classifying、counting cells（分群，定义，计数）")]),s._v(" "),e("li",[s._v("constructing single-cell trajectories（构建轨迹）")]),s._v(" "),e("li",[s._v("differential expresssion analysis （差异表达分析）")])]),s._v(" "),e("p",[s._v("monocle2"),e("br"),s._v("\n分析流程"),e("br"),s._v("\n1、CellDataSet class\nexpression matrix：genes as row，cells as column\nphenoData：cells as row，cell attributes as column —— 表型数据/细胞信息\nfeatureData：feature as row，gene sttributes as column —— 特征数据/基因信息")]),s._v(" "),e("p",[s._v("2、appropriate distribution\nFPKM/TPM ：generally log-normally distributed\nUMIs or read counts： better modeled with the negative binomial")]),s._v(" "),e("p",[s._v("3、estimate size factors and dispersions\n后续分析和计算必须")]),s._v(" "),e("p",[s._v("4、classifying and counting cells\nby type、without marker genes、using marker genes、imputing cell type")]),s._v(" "),e("p",[s._v("下面这几个名词会在不同的函数中用到，但是意思相近，可以参考理解：")]),s._v(" "),e("ul",[e("li",[s._v("FeatureData -- gene function -- gene annotation")]),s._v(" "),e("li",[s._v("PhenoData -- cell type -- sample annotation")])]),s._v(" "),e("h2",{attrs:{id:"整理理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整理理解"}},[s._v("#")]),s._v(" 整理理解")]),s._v(" "),e("p",[s._v("最后整理一下主要用到的函数")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("newCellDataSet；\n\nComparable：\n- monocle：estimateSizeFactors；estimateDispersions\n- seurat：ScaleData；NormalizeData\n\nQC：\n- monocle：detectGenes；\n- seurat：PercentageFeatureSet；\n\nDEGs：\n- monocle：dispersionTable；differentialGeneTest；\n- seurat：VariableFeatures；FindAllMarkers\n\nsetOrderingFilter；reduceDimension；orderCells；BEAM；\n\nPlot：\n- plot_ordering_genes\n- plot_cell_trajectory\n- plot_genes_in_pseudotime\n- plot_genes_jitter\n- plot_genes_violin\n- plot_pseudotime_heatmap\n- plot_genes_branched_heatmap\n\n\nGet Information\n- pData(HSMM_myo)\n- fData(HSMM_myo)\n- exprs(HSMM_myo)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[s._v("参考资料：")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/5d6fd4561bc0",target:"_blank",rel:"noopener noreferrer"}},[s._v("（详细点）单细胞之轨迹分析 - monocle2 原理解读+实操 "),e("OutboundLink")],1)]),s._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkxNjI0ODk3Mg==&mid=2247486022&idx=1&sn=a42dd2fba68205f83df3668edcdae179&chksm=c1538aa5f62403b3ff0ccbcc3c1193540f8c55ba67da9741e8c96e11518c4a7c9f74e817411e&scene=178&cur_album_id=3025306541085982726#rd",target:"_blank",rel:"noopener noreferrer"}},[s._v("（简洁点）monocle2实战 (qq.com)"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"学习记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习记录"}},[s._v("#")]),s._v(" 学习记录")]),s._v(" "),e("p",[e("strong",[s._v("主要的流程概览")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 创建对象 -- CellDataSet\npd <- new("AnnotatedDataFrame", data = sample_sheet)\nfd <- new("AnnotatedDataFrame", data = gene_annotation)\ncds <- newCellDataSet(expr_matrix, phenoData = pd, featureData = fd)\n\n\n# 根据已知标记基因鉴定细胞\ncth <- newCellTypeHierarchy()\nMYF5_id <- row.names(subset(fData(cds), gene_short_name == "MYF5"))\nANPEP_id <- row.names(subset(fData(cds), gene_short_name == "ANPEP"))\n\ncth <- addCellType(cth, "Myoblast", classify_func = function(x) { x[MYF5_id,] >= 1 })\ncth <- addCellType(cth, "Fibroblast", classify_func = function(x) { x[MYF5_id,] < 1 & x[ANPEP_id,] > 1 } )\n\ncds <- classifyCells(cds, cth, 0.1)\n\n\n# 聚类细胞\ncds <- clusterCells(cds)\n\n\n# 将细胞按照伪时间规划在轨迹上（order cells in pseudotime along a trajectory）\ndisp_table <- dispersionTable(cds)\nordering_genes <- subset(disp_table, mean_expression >= 0.1)\ncds <- setOrderingFilter(cds, ordering_genes)\ncds <- reduceDimension(cds)\ncds <- orderCells(cds)\n\n\n# 进行差异表达分析\ndiff_test_res <- differentialGeneTest(cds, fullModelFormulaStr = "~Media")\nsig_genes <- subset(diff_test_res, qval < 0.1)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("开始尝试下载、运行")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 下载（直接下载的包会常有报错，下面是修改过的）\nwget -c https://github.com/cole-trapnell-lab/monocle-release/files/10134172/monocle_2.26.0.tar.gz\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("直接导入数据 -- "),e("code",[s._v("importCDS(pbmc)")])]),s._v(" "),e("p",[s._v("默认"),e("code",[s._v("import_all = FALSE")]),s._v("，只保留最小数据集；也可以设置参数为，"),e("code",[s._v("import_all = TRUE")]),s._v("，导入全部slot")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("seuobj <-  readRDS('02_anno_marker.rds')\nseuobj <- subset(seuobj,idents = c('mPP-Hep','mInt-Hep','mPC-Hep','mNASH-Hep1','mNASH-Hep2'))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("构建所需的信息")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 表达矩阵 # 行-gene，列-barcodes\ncounts <- as(as.matrix(seuobj@assays[["RNA"]]@counts), \'sparseMatrix\')\ncounts\n\n# 后面分析运存压力太大，尝试随机选200个细胞进行分析\nset.seed(123)\ncolumn_names <- colnames(counts)\nselected_cell <- sample(column_names, 2000)\ncounts <- counts[, selected_cell]\n\ncounts <- as(as.matrix(counts),\'sparseMatrix\')\n\n# 基因注释信息\ngene_annotation <- data.frame(gene_short_name = rownames(counts), \n                              biotype = rep("protein_coding", nrow(counts)))\nrownames(gene_annotation)<-rownames(counts)\ngene_annotation\n\n# 细胞注释信息\nsample_sheet<-as.data.frame(seuobj@meta.data)\nsample_sheet<-cbind(rownames(sample_sheet),sample_sheet)\ncolnames(sample_sheet)[1]<-"cell"\nsample_sheet<-as.data.frame(t(subset(t(sample_sheet),select=colnames(counts))))\nsample_sheet\n\n# 创建monocle2对象\npd <- new("AnnotatedDataFrame", data = sample_sheet)\nfd <- new("AnnotatedDataFrame", data = gene_annotation)\nHSMM <- newCellDataSet(counts,\n                       phenoData = pd, \n                       featureData = fd,\n                       expressionFamily = negbinomial.size())\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[e("code",[s._v("expressionFamily，有这几个选项：negbinomial.size()，negbinomial()，tobit()，gaussianff()")])])]),s._v(" "),e("ul",[e("li",[s._v("negbinomial.size()和negbinomial()：输入的表达矩阵为UMI,一般适用于10x的数据；")]),s._v(" "),e("li",[s._v("negbinomial()的结果更准确，但是计算更耗时；一般建议采用negbinomial.size()；稀疏矩阵用negbinomial.size()")]),s._v(" "),e("li",[s._v("tobit()：适用于输入的表达矩阵为FPKM或者TPM, 构建monocle2的class时会自动进行log化计算")]),s._v(" "),e("li",[s._v("gaussianff()：输入为log化后的FPKM或者TPM。(目前在单细胞数据中，FPKM已不多用，smart-seq2平台数据一般采用TPM)")])]),s._v(" "),e("p",[s._v("数据的结构格式")]),s._v(" "),e("p",[s._v("counts"),e("br"),s._v(" "),e("img",{attrs:{src:"https://s2.loli.net/2024/04/21/Ac2iLTmR6jdp3Oh.png",alt:"image.png|800"}})]),s._v(" "),e("p",[s._v("sample_sheet"),e("br"),s._v(" "),e("img",{attrs:{src:"https://s2.loli.net/2024/04/21/sjStEVMBmgHxvlF.png",alt:"image.png|800"}})]),s._v(" "),e("p",[s._v("gene_annotation（name只能是"),e("code",[s._v("gene_short_name")]),s._v("）"),e("br"),s._v(" "),e("img",{attrs:{src:"https://s2.loli.net/2024/04/21/VCKLStzcvfpiBeN.png",alt:"image.png|300"}})]),s._v(" "),e("p",[s._v("估计大小因子，离散程度")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cds <- estimateSizeFactors(cds)\ncds <- estimateDispersions(cds)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("SizeFactor，大小因子/尺度系数，用于标准化细胞间的mRNA差异；不同的样本/实验中，检测到的RNA表达量不一样，所以需要根据每个样本的总量，进行标准化，以便后续不同样本间可以比较。（感觉像是一个“总和”，描述数据的总量大小）；")]),s._v(" "),e("p",[s._v("Dispersion，离散度值，用于后续差异分析；（像是一个“极值”，描述数据的范围，离散程度）")]),s._v(" "),e("p",[e("strong",[s._v("过滤掉低质量的细胞")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cds <- detectGenes(cds, min_expr = 0.1) #这一操作会在fData(cds)中添加一列num_cells_expressed\n\nprint(head(fData(cds)))\nexpressed_genes <- row.names(subset(fData(cds),\n    num_cells_expressed >= 10)) #过滤掉在小于10个细胞中表达的基因，还剩11095个基因。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("接着是"),e("strong",[s._v("选择定义轨迹的基因，可视化轨迹基因，构建轨迹，可视化轨迹")])]),s._v(" "),e("p",[s._v("主要步骤是：选择基因，降维数据，伪时间上排序细胞")]),s._v(" "),e("p",[s._v("推断单细胞轨迹是一个机器学习的问题。同时对于scRNAseq，数据比较稀疏，数据会很"),e("code",[s._v("嘈杂")]),s._v("，但是不同的基因表达量又包含有关细胞状态的信息，所以需要和研究对象分化轨迹非常相关的基因，这一步的选择会对轨迹的形状有较大的影响。")]),s._v(" "),e("p",[s._v("monocle主要是基于"),e("code",[s._v("关键基因")]),s._v("的表达模式，通过学习每个细胞必须经历的基因表达变化的序列，根据模拟时间值，对细胞进行排序，模拟出时间发育过程的动态变化。这个技术是一种在低维空间排布高维数据的降维技术。")]),s._v(" "),e("p",[s._v("monocle提供了下面几种选择"),e("code",[s._v("关键基因")]),s._v("的方法")]),s._v(" "),e("ul",[e("li",[s._v("选择发育差异表达基因")]),s._v(" "),e("li",[s._v("选择分群差异表达基因")]),s._v(" "),e("li",[s._v("选择离散程度高的基因")]),s._v(" "),e("li",[s._v("自己定义发育标记基因（根据先验知识）")])]),s._v(" "),e("blockquote",[e("p",[s._v("ps：前三个完全由计算得出，细胞发育轨迹不受人为干预，所以叫无监督分析方法；最后一种人为使用了先验的知识辅助分析，所以叫半监督的方法； -- 监督/半监督，听着本以为很高级...")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 使用seurat 的 variablefeatures 选择的高度变化的基因\nordergene <- VariableFeatures(pbmc)\n\n\n# 使用seurat 的 findallmarkers 选择不同 clusters之间的差异表达基因\ndeg.cluster <- FindAllMarkers(pbmc)\nordergene <- subset(deg.cluster,p_val_adj<0.05)$gene\n\n\n# 使用monocle选择的高变基因\ndisp_table <- dispersionTable(cds)\nordergene <- subset(disp_table, mean_expression >= 0.1 & dispersion_empirical >= 1 * dispersion_fit)$gene_id\n\n\n# monocle自己算的轨迹基因（无先验经验，或是为了防止引入偏见）\ndiff <- differentialGeneTest(cds[expressed_genes,],fullModelFormulaStr="~cell_type",cores=1)\ndeg <- subset(diff, qval < 0.01)\ndeg <- deg[order(deg$qval, decreasing = F), ]\nordergene <- rownames(deg)\n\n\ncds <- setOrderingFilter(cds, ordergene) # 把差异基因嵌入数据中\nplot_ordering_genes(cds) # 看一看定义轨迹分化的基因\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[s._v("选择用于排序的基因数据一般在2000左右比较合适，太多的话可以选择最靠前的，"),e("code",[s._v("ordergene <- row.names(deg)[order(deg$qval)][1:400]")])]),s._v(" "),e("p",[s._v("接着数据需要"),e("strong",[s._v("降维")]),s._v("，将数据从高维投射到低维空间中，相当于“将一颗树上的树干，树枝，叶子，画在纸上”")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cds <- reduceDimension(cds, max_components = 2, method = 'DDRTree')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("将细胞在二维的图形，沿着逆时间轨迹排列（可以选择一个为"),e("code",[s._v("根")]),s._v("）")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cds <- order(cds)\ncds <- orderCells(cds, root_state = 5)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("下面就是几种可视化效果了")]),s._v(" "),e("p",[s._v("根据cds@phenoData@data中的表型信息(metadata)对细胞上色")]),s._v(" "),e("p",[s._v("绘制"),e("strong",[s._v("分化轨迹图")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('plot_cell_trajectory(cds, color_by = "Pseudotime", size=1, show_backbone=TRUE)\nplot_cell_trajectory(cds, color_by = "cell_type", size=1, show_backbone=TRUE)\nplot_cell_trajectory(cds, color_by = "State",size=1, show_backbone=TRUE)\nplot_cell_trajectory(cds, color_by = "seurat_clusters")\n\nplot_cell_trajectory(cds, color_by = "State") + \n\tfacet_wrap("~State", nrow = 1) # 根据细胞状态上色的同时，以细胞状态拆分图 \n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("绘制"),e("strong",[s._v("树形分化图")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('p1 <- plot_cell_trajectory(cds, x = 1, y = 2, color_by = "celltype")\n\np2 <- plot_complex_cell_trajectory(cds, x = 1, y = 2, color_by = "celltype")\n\np1 | p2\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("还可以沿着时间轴绘制"),e("strong",[s._v("细胞密度图")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('library(ggpubr)\n\ndf <- pData(cds) \nggplot(df, aes(Pseudotime, colour = cell_type, fill=cell_type)) +\n  geom_density(bw=0.5,size=1,alpha = 0.5)+theme_classic2()\n\n\n# 手动设置颜色的方法\nClusterName_color_panel <- c(\n  "Naive CD4 T" = "#DC143C", "Memory CD4 T" = "#0000FF", "CD14+ Mono" = "#20B2AA",\n  "B" = "#FFA500", "CD8 T" = "#9370DB", "FCGR3A+ Mono" = "#98FB98",\n  "NK" = "#F08080", "DC" = "#0000FF", "Platelet" = "#20B2AA"\n)\nggplot(df, aes(Pseudotime, colour = cell_type, fill=cell_type)) +\n  geom_density(bw=0.5,size=1,alpha = 0.5)+theme_classic2()+ \n  scale_fill_manual(name = "", values = ClusterName_color_panel)+\n  scale_color_manual(name = "", values = ClusterName_color_panel)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("绘制分化轨迹中的"),e("strong",[s._v("基因表达变化")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('library(patchwork) # 拼图用的\n\n\nkeygenes <- head(ordergene,3) # 一组基因名，还可以设置自己感兴趣的\nsub_cds <- HSMM_myo[keygenes,]\n\n\np1 <- plot_genes_in_pseudotime(cds_subset = sub_cds, color_by = "State")\np2 <- plot_genes_in_pseudotime(cds_subset = sub_cds, color_by = "celltype")\np3 <- plot_genes_in_pseudotime(cds_subset = sub_cds, color_by = "Pseudotime")\nplotc <- p1|p2|p3\nggsave("Genes_pseudotimeplot.png", plot = plotc, width = 16, height = 8)\n\n\np1 <- plot_genes_jitter(sub_cds, grouping = "State", color_by = "State")\np2 <- plot_genes_violin(sub_cds, grouping = "State", color_by = "State")\np3 <- plot_genes_in_pseudotime(sub_cds, color_by = "State")\nplotc <- p1|p2|p3\nggsave("Genes_Jitterplot.png", plot = plotc, width = 16, height = 8)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("展示单个基因的"),e("strong",[s._v("表达量随着轨迹的变化")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("colnames(pData(cds))\n\npData(cds)$CCL5 = log2( exprs(cds)['CCL5',]+1)\np1=plot_cell_trajectory(cds, color_by = \"CCL5\")  + scale_color_gsea()\n\npData(cds)$S100A4 = log2(exprs(cds)['S100A4',]+1)\np2=plot_cell_trajectory(cds, color_by = \"S100A4\")    + scale_color_gsea()\n\nlibrary(patchwork)\np1+p2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("寻找拟时相关的基因/差异基因")]),s._v(" "),e("p",[s._v("三种寻找差异基因的方法：")]),s._v(" "),e("ol",[e("li",[s._v("basic differential analysis")]),s._v(" "),e("li",[s._v("finding genes that distinguish cell type or state")]),s._v(" "),e("li",[s._v("finding genes that change as a function of pseudotime")])]),s._v(" "),e("p",[s._v("基础差异分析；区别细胞类型或状态的基因；改变轨迹变化的基因")]),s._v(" "),e("p",[e("code",[s._v("sm.ns")]),s._v("函数指出Monocle应该通过表达式值拟合自然样条曲线，以帮助它将表达式的变化描述为进程的函数。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('#这里是把排序基因（ordergene）提取出来做回归分析，来找它们是否跟拟时间有显著的关系；如果不设置，就会用所有基因来做它们与拟时间的相关性\n\nTime_diff <- differentialGeneTest(cds[ordergene,], \n\tcores = 1, \n\tfullModelFormulaStr = "~sm.ns(Pseudotime)")\nTime_diff <- Time_diff[,c(5,2,3,4,1,6,7)] #把gene放前面，也可以不改\n\nTime_genes <- Time_diff %>% pull(gene_short_name) %>% as.character()\np=plot_pseudotime_heatmap(cds[Time_genes,], \n\tnum_clusters=4, \n\tshow_rownames=T, \n\treturn_heatmap=T)\nggsave("Time_heatmapAll.pdf", p, width = 5, height = 10)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("这个p，我一直以为是个图像的对象，结果还能取出来单独分析")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('p$tree_row\nclusters <- cutree(p$tree_row, k = 4)\nclustering <- data.frame(clusters)\nclustering[,1] <- as.character(clustering[,1])\ncolnames(clustering) <- "Gene_Clusters"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("可以把差异基因拿出来，去做富集分析哦！")]),s._v(" "),e("p",[s._v("来看看差异基因的热图")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('Time_genes <- top_n(Time_diff, n = 100, desc(qval)) %>% pull(gene_short_name) %>% as.character()\np = plot_pseudotime_heatmap(cds[Time_genes,], num_clusters=4, show_rownames=T, return_heatmap=T)\nggsave("Time_heatmapTop100.pdf", p, width = 5, height = 10)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("显著基因的排序")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('hp.genes <- p$tree_row$labels[p$tree_row$order]\nTime_diff_sig <- Time_diff[hp.genes, c("gene_short_name", "pval", "qval")]\nwrite.csv(Time_diff_sig, "Time_diff_sig.csv", row.names = F)\n\nmarker_genes <- row.names(subset(fData(cds),\n                                 gene_short_name %in% c("MEF2C", "MEF2D", "MYF5",\n                                                        "ANPEP", "PDGFRA","MYOG",\n                                                        "TPM1",  "TPM2",  "MYH2",\n                                                        "MYH3",  "NCAM1", "TNNT1",\n                                                        "TNNT2", "TNNC1", "CDK1",\n                                                        "CDK2",  "CCNB1", "CCNB2",\n                                                        "CCND1", "CCNA1", "ID1")))\n\ndiff_test_res <- differentialGeneTest(cds[marker_genes,],\n                                      fullModelFormulaStr = "~sm.ns(Pseudotime)")\nsig_gene_names <- row.names(subset(diff_test_res, qval < 0.1))\nplot_pseudotime_heatmap(cds[sig_gene_names,],\n                        num_clusters = 6,\n                        cores = 1,\n                        show_rownames = T)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("针对单细胞的"),e("strong",[s._v("轨迹分支")]),s._v("，进行分析")]),s._v(" "),e("p",[s._v("单细胞轨迹常常包括分支，这些分支的产生是因为细胞执行不同的基因表达程序。monocle2提供一个统计方法："),e("strong",[s._v("分支表达式分析建模")]),s._v(" -- BEAM，branched expression analysis modeling，用于寻找以依赖于分支方式调控的基因")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('BEAM_res <- BEAM(cds[ordergene,], branch_point = 1, cores = 2) \n#BEAM_res <- BEAM(cds, branch_point = 1, cores = 2) #对全部基因进行排序，运行较慢\n\nBEAM_res <- BEAM_res[order(BEAM_res$qval),]\nBEAM_res <- BEAM_res[,c("gene_short_name", "pval", "qval")]\nhead(BEAM_res)\n\nplot_genes_branched_heatmap(cds[row.names(subset(BEAM_res,\n                                                  qval < 1e-4)),],\n                            branch_point = 1, #绘制的是哪个分支\n                            num_clusters = 4, #分成几个cluster，根据需要调整\n                            cores = 1,\n                            use_gene_short_name = T,\n                            show_rownames = T)#有632个gene，太多了\n\n\n\n#选前100个基因可视化\nBEAM_genes <- top_n(BEAM_res, n = 100, desc(qval)) %>% pull(gene_short_name) %>% as.character()\np <- plot_genes_branched_heatmap(cds[BEAM_genes,],  branch_point = 1, \n                                 num_clusters = 3, show_rownames = T, return_heatmap = T)\nggsave("BEAM_heatmap.pdf", p$ph_res, width = 6.5, height = 10)\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);