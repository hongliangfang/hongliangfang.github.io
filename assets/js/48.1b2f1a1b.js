(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{368:function(s,a,e){"use strict";e.r(a);var n=e(7),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"反思记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反思记录"}},[s._v("#")]),s._v(" 反思记录")]),s._v(" "),a("p",[s._v("如何快速分析呢？输入输出结果如何更加批量化？也就是更快的验证自己想知道的结果？\n”API“：输入，输出，\n设置好结构，放好位置，然后就是一顿操作猛如虎了~\n学习和后续进行应用，是一个整体的过程，要做好衔接，在学的时候就想好如何使用，对吧~")]),s._v(" "),a("p",[s._v("还有python版的GSEA分析，嗯，可以参考看看\n"),a("a",{attrs:{href:"01.%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/01.%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90/01.%E7%BC%93%E5%86%B2--%E7%A7%91%E7%A0%94"}},[s._v("缓冲--科研")]),s._v("这里")]),s._v(" "),a("h2",{attrs:{id:"如何理解富集分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何理解富集分析"}},[s._v("#")]),s._v(" 如何理解富集分析？")]),s._v(" "),a("p",[s._v("面对外界环境的改变，内部的生物学过程一般不会只有一个分子起作用，一般是一条通路或者是一群分子蛋白在合作着应对外界环境的变化。\n我们得到了某一个时刻各种细胞的基因表达量数据，要看是不是某个方面起了作用/变化，最好是分析所有的变量是不是在某一组具有特定功能的群体里显著富集（增多），才更能说明问题。于是有了富集分析。")]),s._v(" "),a("h2",{attrs:{id:"数据库介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库介绍"}},[s._v("#")]),s._v(" 数据库介绍")]),s._v(" "),a("p",[s._v("根据参考的基因集，也就是前人研究总结的某个通路上的基因集来源，可以将富集分析分为：\nGO term功能，KEGG pathway通路，MSigDB基因集富集")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.geneontology.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Gene Ontology Resource"),a("OutboundLink")],1),s._v("将蛋白分子根据下面三种方式分类：")]),s._v(" "),a("ul",[a("li",[s._v("molecular function，分子功能，某个分子的功能")]),s._v(" "),a("li",[s._v("cellular component，细胞组分，某个分子的位置")]),s._v(" "),a("li",[s._v("biological process，生物过程，某个分子参与的活动")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.genome.jp/kegg/",target:"_blank",rel:"noopener noreferrer"}},[s._v("KEGG: Kyoto Encyclopedia of Genes and Genomes"),a("OutboundLink")],1),s._v("比较复杂，有很多分类方式：\n包括通路，代谢、调控、通路、生化、疾病、药物等相关的分子相互作用和关系网络。\n用的最多的是按照通路pathway，这个方面分类的集合")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.gsea-msigdb.org/gsea/msigdb",target:"_blank",rel:"noopener noreferrer"}},[s._v("GSEA | MSigDB (gsea-msigdb.org)"),a("OutboundLink")],1),s._v("也定义了不少基因集合：\n分为人类和小鼠两个大类；人的又分了9类；")]),s._v(" "),a("ul",[a("li",[s._v("H，hallmark gene sets，能够定义生物学状态或过程的基因集")]),s._v(" "),a("li",[s._v("C1，positional gene sets，根据染色体位置定义的基因集")]),s._v(" "),a("li",[s._v("C2，curated gene sets，根据数据库，文献，专家定义的基因集")]),s._v(" "),a("li",[s._v("C3，regulatory target gene sets，代表转录因子或microRNA 调控的潜在目标的基因集")]),s._v(" "),a("li",[s._v("C4，compositional gene sets，根据癌症产生的微阵列数据定义的的基因集")]),s._v(" "),a("li",[s._v("C5，oncology gene sets，被注释为一条本体数据上的基因集")]),s._v(" "),a("li",[s._v("C6，oncogenic signature gene sets，在癌症中失调的细胞通路特征的基因集")]),s._v(" "),a("li",[s._v("C7，immunological signature gene sets，代表免疫系统内细胞状态和扰动的基因集")]),s._v(" "),a("li",[s._v("C8，cell type signature gene sets，单细胞数据中定义cluster基因marker的基因集")])]),s._v(" "),a("p",[s._v("The Molecular Signatures Database (MSigDB) is a resource of tens of thousands of annotated gene sets for use with GSEA software, divided into "),a("a",{attrs:{href:"https://www.gsea-msigdb.org/gsea/msigdb/human/collections.jsp",target:"_blank",rel:"noopener noreferrer"}},[s._v("Human"),a("OutboundLink")],1),s._v(" and "),a("a",{attrs:{href:"https://www.gsea-msigdb.org/gsea/msigdb/mouse/collections.jsp",target:"_blank",rel:"noopener noreferrer"}},[s._v("Mouse"),a("OutboundLink")],1),s._v(" collections.")]),s._v(" "),a("h2",{attrs:{id:"go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[s._v("#")]),s._v(" GO")]),s._v(" "),a("p",[s._v("GO富集分析用于从一组感兴趣的基因或蛋白质中（一般是差异基因），找出在Gene Ontology（GO）数据库中富集的，生物学过程（Biological Process）、分子功能（Molecular Function）和细胞组分（Cellular Component）。\nGO富集分析和KEGG富集分析做的事情包括原理其实都一样，它们最大的差别是使用的数据库不一样。")]),s._v(" "),a("h3",{attrs:{id:"go数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go数据库"}},[s._v("#")]),s._v(" GO数据库")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.geneontology.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Gene Ontology Resource/GO数据库"),a("OutboundLink")],1),s._v("是一个由国际合作组织维护的生物信息学资源库，用于对基因和蛋白质的功能进行注释和分类，以便更好地理解生物学过程和分析实验数据。")]),s._v(" "),a("p",[s._v("GO数据库的主要内容包括三个主要领域（也称为三个GO本体）：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("生物学过程（Biological Process）")]),s._v("：用于描述基因和蛋白质在生物学过程中的活动，例如细胞分裂、信号传导、代谢过程等。")]),s._v(" "),a("li",[a("code",[s._v("分子功能（Molecular Function）")]),s._v("：用于描述基因和蛋白质在分子水平上的功能，例如酶活性、DNA结合、受体活性等。")]),s._v(" "),a("li",[a("code",[s._v("细胞组分（Cellular Component）")]),s._v("：用于描述基因和蛋白质在细胞中所处的位置或组分，例如细胞核、细胞膜、线粒体等。")])]),s._v(" "),a("h3",{attrs:{id:"数据准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据准备"}},[s._v("#")]),s._v(" 数据准备")]),s._v(" "),a("p",[s._v("使用的数据一般是差异分析之后得到的类似“差异基因”的数据，最低要求input是 "),a("strong",[s._v("一列基因名的字符串")]),s._v("，多一些对应的P值或logFC的话，可以用来筛选和排序")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('library(ggpubr) #绘图使用  \nlibrary(ggplot2) # 绘图使用  \nlibrary(clusterProfiler) #KEGG富集分析使用  \nlibrary(org.Hs.eg.db) #转换基因ID使用  \nlibrary(stats) #数据处理使用  \nlibrary(data.table) #数据读取使用  \nlibrary(dplyr) #数据处理使用  \n  \nBRCA_Mathc_DEG <- fread("BRCA_Match_DEG.txt",data.table = F)  \n##差异基因筛选,也可以根据自己的需要选择 \nDEG_data <- BRCA_Mathc_DEG %>% dplyr::filter(abs(logFC) > 2 & FDR < 0.05)  \n\n#Gene名转化为GeneID  \ngene.df<-bitr(DEG_data$gene_id,fromType="SYMBOL",#fromType数据ID类型是属于哪一类  \n                toType=c("ENTREZID","SYMBOL"),#toType要转换成哪种ID类型，可以写多种，也可以只写一种  \n                OrgDb=org.Hs.eg.db)#Orgdb是指对应的注释包\n  \ncolnames(gene.df)[1] <- "gene_id"  \nDEG_data1 <- left_join(gene.df,DEG_data)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("和KEGG富集分析一样，差异基因的选择也可以单独选择上调或下调基因分别进行富集分析。GO富集分析时，也需要将GeneID从SYMBOL转换成ENTREZID。由于数据是人类数据，因此选择"),a("code",[s._v("org.Hs.eg.db")]),s._v("数据集。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('GO_all <- enrichGO(gene = enrich_data$EntrezID,#基因列表(转换的ID)  \n                   keyType = "ENTREZID",#指定的基因ID类型，默认为ENTREZID  \n                   OrgDb = org.Mm.eg.db,#物种对应的org包  \n                   ont = "ALL",     #CC细胞组件，MF分子功能，BF生物学过程，ALL以上三个  \n                   pvalueCutoff = 0.01, #p值阈值  \n                   pAdjustMethod = "fdr",#多重假设检验校正方式  \n                   minGSSize=10,       #注释的最小基因集，默认为10  \n                   maxGSSize=500,      #注释的最大基因集，默认为500  \n                   qvalueCutoff=0.01,        #q值阈值  \n                   readable = TRUE)          #基因ID转换为基因名 \n                   \nGO_result <- data.frame(GO_all)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"结果解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果解释"}},[s._v("#")]),s._v(" 结果解释")]),s._v(" "),a("p",[s._v("GO富集分析结果一共有10列")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ONTOLOGY")]),s._v("：表示BP、CC、MF`中的哪一类")]),s._v(" "),a("li",[a("code",[s._v("ID：")]),s._v("GO通路或功能类别的唯一标识符。")]),s._v(" "),a("li",[a("code",[s._v("Description：")]),s._v("GO通路的描述，即通路或功能的名称或注释。")]),s._v(" "),a("li",[a("code",[s._v("GeneRatio：")]),s._v("输入的差异基因中，映射到此GO通路的基因数目/映射到某一过程(BP/CC/MF之一)所有GO通路的基因总数目。")]),s._v(" "),a("li",[a("code",[s._v("BgRatio：")]),s._v("在整个基因数据库（或背景基因集合）中映射到GO通路的基因数目，以及该通路中的总基因数目。")]),s._v(" "),a("li",[a("code",[s._v("pvalue、p.adjust和qvalue：")]),s._v("p值、校正后p值和q值；")]),s._v(" "),a("li",[a("code",[s._v("geneID：")]),s._v("映射到该通路的基因的标识符列表，这里转换成基因名SYMBOL了。")]),s._v(" "),a("li",[a("code",[s._v("Count：")]),s._v("在富集分析中映射到该通路或功能类别的基因数目，即GeneRatio列中的第一个值。")])]),s._v(" "),a("h3",{attrs:{id:"结果绘图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果绘图"}},[s._v("#")]),s._v(" 结果绘图")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("## 自带的绘图  \n## 条形图\nbarplot(GO_all,showCategory=20)  \n\n## 点图\ndotplot(GO_all,showCategory=15)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("但是，这样直接展示出来的话不知道属于哪种GO通路的哪一类，所以可以自己调整一下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# GO三种类别，每种选择显著性最高的12个展示出来  \ngo_pathway <- GO_result %>% group_by(ONTOLOGY) %>% top_n(n = 20, wt = -p.adjust)  \n\n\n# 纵向柱状图  \nggplot(go_enrichment_pathway, aes(x=reorder(Description, -Count), y=Count, fill=ONTOLOGY)) +  \n  geom_bar(stat="identity", position=position_dodge(width=0.8), width=0.6) +  \n  theme_minimal() +  \n  labs(x="GO Term", y="Gene_Number", title="Top 10 Enriched GO Terms") +  \n  facet_grid(ONTOLOGY~., scale = \'free_y\', space = \'free_y\')+  \n  coord_flip() +  #让柱状图变为纵向  \n  scale_fill_manual(values=c("CC"="skyblue","BP"="pink","MF"="lightgreen"))+  \n  theme_bw()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 横向柱状图 \nggplot(go_enrichment_pathway,aes(x=reorder(Description,-Count),y=Count,fill=ONTOLOGY))+# 定义x、y轴; 根据ONTOLOGY填充颜色  \n  geom_bar(stat="identity",width=0.8)+#柱状图宽度  \n  scale_fill_manual(values=c("CC"="skyblue","BP"="pink","MF"="lightgreen"))+#柱状图填充颜色  \n  facet_grid(.~ONTOLOGY,scale=\'free_x\',space=\'free_x\')+  \n  labs(x="GO Term", y="Gene_Number", title="Top 200 Enriched GO Terms")+  \n  theme_bw() +  \n  theme(axis.text.x=element_text(family="sans",face="bold",color="gray50",angle=70,vjust=1, hjust = 1))#对字体样式、颜色、还有横坐标角度（）\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 绘制气泡图  \nggplot(go_enrichment_pathway, aes(x=reorder(Description, Count), y=Count)) +  \n  geom_point(aes(size=Count,color=-log10(p.adjust))) +  \n  scale_size_continuous(range=c(1, 10)) +  \n  facet_grid(ONTOLOGY~., scale = \'free_y\', space = \'free_y\')+  \n  coord_flip() +  #让柱状图变为纵向  \n  theme_minimal() +  \n  scale_color_gradient(low = "pink",high ="red")+  \n  labs(color=expression(-log10(p.adjust),size="Count"),   \n       x="Gene Ratio",y="Gene_Number",title="GO Enrichment")+  \n  theme_bw()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"kegg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kegg"}},[s._v("#")]),s._v(" KEGG")]),s._v(" "),a("p",[s._v("KEGG富集分析（Kegg Enrichment Analysis）是一种生物信息学分析方法，\n用于从一组感兴趣的基因或蛋白质中，找出在KEGG数据库中富集的生物学通路。\n这种分析方法可以帮助我们理解基因集合中的功能分布和生物学过程，从而揭示基因集合的生物学意义和潜在的功能。")]),s._v(" "),a("h3",{attrs:{id:"kegg数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kegg数据库"}},[s._v("#")]),s._v(" KEGG数据库")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.genome.jp/kegg/",target:"_blank",rel:"noopener noreferrer"}},[s._v("KEGG: Kyoto Encyclopedia of Genes and Genomes"),a("OutboundLink")],1),s._v("是一个全球公认的生物信息学数据库，用于解释高级功能和生物系统功能的分子水平信息，特别关注基因组、基因功能和生物化学通路等方面。KEGG数据库提供了对生物学、生物化学和生物信息学领域的多种信息资源，包括基因和蛋白质的功能注释、代谢通路、信号通路、药物目标等信息。")]),s._v(" "),a("p",[s._v("先介绍KEGG富集分析的R语言实现以及绘图，原理放在最后，需要的可以看一下。")]),s._v(" "),a("h3",{attrs:{id:"数据准备-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据准备-2"}},[s._v("#")]),s._v(" 数据准备")]),s._v(" "),a("p",[s._v("使用的数据一般是差异分析之后得到的类似“差异基因”的数据，最低要求input是 "),a("strong",[s._v("一列基因名的字符串")]),s._v("，多一些对应的P值或logFC的话，可以用来筛选和排序")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('library(ggplot2) # 绘图使用   \nlibrary(clusterProfiler) #KEGG富集分析使用   \nlibrary(org.Hs.eg.db) #转换基因ID使用   \nlibrary(stats) #数据处理使用   \nlibrary(data.table) #数据读取使用   \nlibrary(dplyr) #数据处理使用\n\nBRCA_Mathc_DEG <- fread("./data/RawData/BRCA_Match_DEG.txt",data.table = F)   \nDEG_data <- BRCA_Mathc_DEG %>% dplyr::filter(abs(logFC) > 2 & FDR < 0.05) #数据筛选   \n\n#Gene名转化为GeneID   \ngene.df <- bitr(DEG_data$gene_id, \n\tfromType = "SYMBOL", #fromType数据ID类型是属于哪一类的                   \n\ttoType = c("ENTREZID", "SYMBOL"), #toType要转换成哪种ID类型，一种或两种都可以              \n\tOrgDb = org.Hs.eg.db) #Orgdb对应的注释包\ncolnames(gene.df)[1] <- "gene_id" \nDEG_data1 <- left_join(gene.df,DEG_data)\n\n# KEGG富集分析时，需要将GeneID从SYMBOL转换成ENTREZID，由于数据是人类数据因此选择`org.Hs.eg.db`数据集\n\n## KEGG富集分析   \nkegg <- enrichKEGG(DEG_data1$ENTREZID,\n\torganism = \'human\', \n\tpvalueCutoff = 0.05,\n\tpAdjustMethod = \'BH\', \n\tminGSSize = 3, \n\tmaxGSSize = 500, \n\tqvalueCutoff = 0.05,\n\tuse_internal_data = FALSE)      \nkegg_result <- data.frame(kegg)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("organism = 'human'：")]),s._v("这是指定要进行KEGG富集分析的生物学物种。")]),s._v(" "),a("li",[a("code",[s._v("pvalueCutoff = 0.05：")]),s._v("用于过滤富集分析结果的原始p-value的阈值。")]),s._v(" "),a("li",[a("code",[s._v("pAdjustMethod = 'BH'：")]),s._v("指定用于校正多重假设检验的方法。在这里，使用的是Benjamini-Hochberg方法，通常用于控制假阳性率（False Discovery Rate，FDR）。")]),s._v(" "),a("li",[a("code",[s._v("minGSSize = 3：")]),s._v("富集分析中考虑的最小基因集合大小。")]),s._v(" "),a("li",[a("code",[s._v("maxGSSize = 500：")]),s._v("富集分析中考虑的最大基因集合大小。")]),s._v(" "),a("li",[a("code",[s._v("qvalueCutoff = 0.05：")]),s._v("用于过滤富集分析结果的校正后q-value的阈值。")]),s._v(" "),a("li",[a("code",[s._v("use_internal_data = FALSE：")]),s._v("是否使用内部数据集进行富集分析。如果设置为TRUE，将使用内部数据集，否则将从KEGG网站下载数据。")])]),s._v(" "),a("h3",{attrs:{id:"结果解释-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果解释-2"}},[s._v("#")]),s._v(" 结果解释")]),s._v(" "),a("p",[s._v("富集分析结果共有9列，这里解释一下各列代表的含义。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ID：")]),s._v("KEGG通路或功能类别的唯一标识符。")]),s._v(" "),a("li",[a("code",[s._v("Description：")]),s._v("KEGG通路或功能类别的描述，即通路或功能的名称或注释。")]),s._v(" "),a("li",[a("code",[s._v("GeneRatio：")]),s._v("输入的差异基因中，映射到此KEGG通路的基因数目/映射到所有KEGG通路的基因总数目。")]),s._v(" "),a("li",[a("code",[s._v("BgRatio：")]),s._v("在整个基因数据库（或背景基因集合）中映射到KEGG通路的基因数目，以及该通路中的总基因数目。")]),s._v(" "),a("li",[a("code",[s._v("pvalue、p.adjust和qvalue：")]),s._v("p值、校正后p值和q值；")]),s._v(" "),a("li",[a("code",[s._v("geneID：")]),s._v("映射到该通路的基因的标识符列表，通常是ENTREZID。")]),s._v(" "),a("li",[a("code",[s._v("Count：")]),s._v("在富集分析中映射到该通路或功能类别的基因数目，即GeneRatio列中的第一个值。")])]),s._v(" "),a("h3",{attrs:{id:"结果绘图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果绘图-2"}},[s._v("#")]),s._v(" 结果绘图")]),s._v(" "),a("p",[s._v("我们可以使用富集分析包中自带的绘图函数来进行绘图，也可以通过结果根据需要进行绘图。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 自带的绘图\n\n## 条形图   \nbarplot(kegg, drop = TRUE, showCategory = 15,color = "p.adjust",title = "KEGG Pathway")\n\n## 气泡图   \ndotplot(kegg, showCategory=15)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("根据需要自己绘图")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 根据p-value值排序，选择显著的通路或功能（这里设定阈值为0.05）   \nsignificant_pathways <- subset(enrichment_results, p.adjust < 0.05) \n\n# 绘制基于ggplot2的条形图   \nggplot(significant_pathways, aes(x = reorder(Description, -log10(p.adjust)), y = -log10(p.adjust))) +\n\tgeom_bar(stat = "identity", fill = "skyblue") +\n\tlabs(title = "KEGG Pathway Enrichment Analysis", x = "Pathway", y = "-log10(P-value)") +\n\ttheme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n\tcoord_flip() \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 设置颜色的阶梯和对应的颜色   significant_pathways$pvalue_group <- cut(significant_pathways$p.adjust, breaks = c(0, 0.001, 0.01, 0.05), labels = c("p < 0.001", "0.001 <= p < 0.01", "0.01 <= p < 0.05"))      \n\n# 绘制基于ggplot2的气泡图   \nggplot(significant_pathways, aes(x = reorder(Description, -log10(p.adjust)), y = -log10(p.adjust))) +\n\tgeom_point(aes(size = Count, color = pvalue_group), alpha = 0.7) +\n\tscale_size_continuous(range = c(1, 10)) +\n\tlabs(title = "KEGG Pathway Enrichment Analysis",x = "Pathway",y = "-log10(P-value)",size = "Count",color = "P-value") +     \n\ttheme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n\tcoord_flip()+\nscale_color_manual(values = c("p < 0.001" = "#DC0000B2", "0.001 <= p < 0.01" = "#F39B7FB2", "0.01 <= p < 0.05" = "#4DBBD5B2"))\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"kegg富集分析原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kegg富集分析原理"}},[s._v("#")]),s._v(" KEGG富集分析原理")]),s._v(" "),a("p",[s._v("基因富集分析是通过研究给定的基因集在功能节点上是否过出现得到关注的基因集显著注释的功能节点。\n通常利用"),a("code",[s._v("超几何分布等")]),s._v("方法计算给定基因集在某个功能（或通路）上的"),a("code",[s._v("P")]),s._v("值，判断给定的基因集在功能（或通路）的基因数目超过了随机的期望，是一个小概率事件。")]),s._v(" "),a("h3",{attrs:{id:"超几何检验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超几何检验"}},[s._v("#")]),s._v(" 超几何检验")]),s._v(" "),a("p",[s._v("假设KEGG数据库中总共有"),a("code",[s._v("M")]),s._v("个基因，其中包含"),a("code",[s._v("m")]),s._v("个基因与某个"),a("code",[s._v("KEGG")]),s._v("通路或功能类别相关；\n在感兴趣的基因集合中，总共有"),a("code",[s._v("N")]),s._v("个基因，其中包含"),a("code",[s._v("n")]),s._v("个基因与该"),a("code",[s._v("KEGG")]),s._v("通路或功能类别相关。\n超几何检验的目标是评估从总体（KEGG数据库中）中抽取N个基因，在其中包含n个与该通路或功能相关的基因的概率，与从总体中抽取N个基因，在其中包含m个与该通路或功能相关的基因的概率之间的差异。")]),s._v(" "),a("p",[s._v("超几何检验的公式\n"),a("img",{attrs:{src:"https://cdn.statically.io/gh/hongliangfang/picx-images-hosting@master/study/%E8%B6%85%E5%87%A0%E4%BD%95%E6%A3%80%E9%AA%8C%E5%85%AC%E5%BC%8F.lyaecpxu3nk.webp",alt:"超几何检验公式"}}),s._v("\n其中，"),a("strong",[s._v("P(X ≥ n) 表示从总体中抽取N个基因，至少有n个与该通路或功能相关的基因的概率。超几何检验的p-value就是该概率。")])]),s._v(" "),a("h3",{attrs:{id:"多重假设检验校正"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重假设检验校正"}},[s._v("#")]),s._v(" 多重假设检验校正")]),s._v(" "),a("p",[s._v("在进行KEGG富集分析时，需要考虑多个KEGG通路或功能类别的比较，这会导致多重假设检验的问题。多重假设检验可能导致出现假阳性结果，即错误地将某些通路或功能类别标记为富集。为了控制多重假设检验带来的误差，通常使用多重检验校正方法。"),a("strong",[s._v("常见的方法包括Bonferroni校正和Benjamini-Hochberg（BH）校正。")]),s._v("\nKEGG富集分析的数学原理主要涉及超几何检验来判断富集程度，并使用多重假设检验校正来控制多个比较带来的误差，从而获得显著富集的KEGG通路。")]),s._v(" "),a("h2",{attrs:{id:"gsea"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gsea"}},[s._v("#")]),s._v(" GSEA")]),s._v(" "),a("p",[s._v("GSEA，Gene Set Enrichment Analysis， 基于基因集进行的富集分析\n利用全部的表达基因集，根据基因排序和富集得分，全面显示通路上的功能作用。")]),s._v(" "),a("h3",{attrs:{id:"输入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入数据"}},[s._v("#")]),s._v(" 输入数据")]),s._v(" "),a("ul",[a("li",[s._v("基因列表，差异分析之后的基因列表（和GO/KEGG不同，不需要筛选）")]),s._v(" "),a("li",[s._v("基因集，数据库中基因集，或者自定义的数据集")])]),s._v(" "),a("h3",{attrs:{id:"代码参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码参数"}},[s._v("#")]),s._v(" 代码参数")]),s._v(" "),a("p",[s._v("示例基因集是"),a("a",{attrs:{href:"https://www.gsea-msigdb.org/gsea/msigdb",target:"_blank",rel:"noopener noreferrer"}},[s._v("MSigDB"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('library(ggplot2) #画图使用  \nlibrary(clusterProfiler) #GSEA富集/数据读取使用  \nlibrary(GSEABase) #GSEA富集使用  \nlibrary(dplyr) #数据处理使用  \nlibrary(data.table) #数据读取使用  \n  \ngeneSet <- read.gmt("./Enrichment_analysis/h.all.v2023.1.Hs.symbols.gmt") #下载的基因集  \nBRCA_Mathc_DEG <- fread("./data/RawData/BRCA_Match_DEG.txt",data.table = F)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("基因如何排序？log FC或P值，两个结合或单选一个来排序，等其他方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 1、直接使用logFC作为排序依据  \ngeneList <- BRCA_Mathc_DEG$logFC #获取GeneList  \nnames(geneList) <- BRCA_Mathc_DEG$gene_id #使用转换好的ID，对GeneList命名  \ngeneList <- sort(geneList, decreasing = T) #从高到低排序  \n  \nGSEA_enrichment <- GSEA(geneList, #排序后的gene  \n                        TERM2GENE = geneSet, #基因集  \n                        pvalueCutoff = 0.05, #P值阈值  \n                        minGSSize = 10, #最小基因数量  \n                        maxGSSize = 500, #最大基因数量  \n                        eps = 0, #P值边界  \n                        pAdjustMethod = "BH") #校正P值的计算方法  \n  \nresult <- data.frame(GSEA_enrichment)  \ndim(GSEA_enrichment@result)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"结果分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果分析"}},[s._v("#")]),s._v(" 结果分析")]),s._v(" "),a("p",[s._v("（会展示出显著富集的基因集）")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ID")]),s._v(": 基因集的标识符或名称。")]),s._v(" "),a("li",[a("code",[s._v("Description")]),s._v(": 基因集的描述或注释，通常是对基因集功能、通路或生物学过程的解释。")]),s._v(" "),a("li",[a("code",[s._v("setSize")]),s._v(": 基因集中包含的基因数量。")]),s._v(" "),a("li",[a("code",[s._v("enrichmentScore")]),s._v(": 富集得分（Enrichment Score），它是一个反映基因集在基因表达数据中富集程度的统计量。")]),s._v(" "),a("li",[a("code",[s._v("NES")]),s._v(": 标准化富集得分（Normalized Enrichment Score），它是将富集得分标准化后的值，使得不同基因集的富集得分可比较。")]),s._v(" "),a("li",[a("code",[s._v("pvalue")]),s._v(": 这一列表示富集得分的显著性水平（p-value），用于衡量基因集在基因表达数据中的显著性富集。")]),s._v(" "),a("li",[a("code",[s._v("p.adjust")]),s._v(": 这一列表示多重比较校正后的p-value，通常使用FDR或其他方法进行校正。")]),s._v(" "),a("li",[a("code",[s._v("qvalue")]),s._v(": 这一列表示估计的FDR（False Discovery Rate），用于控制多重假设检验引起的假阳性。")]),s._v(" "),a("li",[a("code",[s._v("rank")]),s._v(": 基因集在排序后的基因列表中的排名。")]),s._v(" "),a("li",[a("code",[s._v("leading_edge")]),s._v(": 这一列指示哪些基因在计算富集得分时对富集结果产生了主要贡献。\n"),a("ul",[a("li",[s._v("tags=60%: 这表示60%的基因集中的基因在富集分析中对结果产生了影响。")]),s._v(" "),a("li",[s._v("list=10%: 这表示在富集分析中使用的整体基因列表（gene list）中，有10%的基因在该基因集中。")]),s._v(" "),a("li",[s._v("signal=55%: 这表示在整个基因集中，有55%的基因在样本中显示出富集信号，即在表达数据中呈现出差异表达的特征。(由tags和list计算得来)。")])])]),s._v(" "),a("li",[a("code",[s._v("core_enrichment")]),s._v(": 这一列指示哪些基因是核心富集基因，对于形成富集得分起关键作用。")])]),s._v(" "),a("h3",{attrs:{id:"结果可视化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果可视化"}},[s._v("#")]),s._v(" 结果可视化")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('## 展示最显著的15个通路  \ndotplot(GSEA_enrichment,showCategory=15,color="p.adjust")\n\n## 将通路分为激活和抑制两个部分  \ndotplot(GSEA_enrichment,split = ".sign")+facet_grid(~.sign)+  \n  theme(plot.title = element_text(size = 10,color="black",hjust = 0.5),  \n        axis.title = element_text(size = 10,color ="black"),   \n        axis.text = element_text(size= 10,color = "black"),  \n        axis.text.x = element_text(angle = 45, hjust = 1 ),  \n        legend.position = "top",  \n        legend.text = element_text(size= 10),  \n        legend.title= element_text(size= 10))\n\n#特定通路作图  \nlibrary(enrichplot)  \n#看一下缺氧通路  \ngseaplot2(GSEA_enrichment,"HALLMARK_HYPOXIA",color="red",pvalue_table = T)\n\n#同时看多个通路  \n#缺氧通路+脂肪酸代谢通路  \ngseaplot2(GSEA_enrichment,c("HALLMARK_HYPOXIA","HALLMARK_FATTY_ACID_METABOLISM"),color=c("red","blue"),pvalue_table = T)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("注意，排序方式会对结果造成影响")]),s._v(" "),a("h3",{attrs:{id:"富集分析原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#富集分析原理"}},[s._v("#")]),s._v(" 富集分析原理")]),s._v(" "),a("p",[s._v("三个步骤\n1、计算富集分数，ES：沿着基因列表，计算基因集的，富集得分\n2、估计ES的显著性水平，P值： #不懂\n3、调整多重假设检验，归一化富集分数NES，错误发现率FDR ： #不懂")]),s._v(" "),a("h2",{attrs:{id:"gsva"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gsva"}},[s._v("#")]),s._v(" GSVA")]),s._v(" "),a("p",[s._v("GSVA，Gene Set Variation Analysis，计算每个样本中的基因集富集水平，将基因表达数据从个体基因的水平转换为基因集（如生物学过程，通路，功能的基因集合）的富集程度")]),s._v(" "),a("p",[s._v("输入数据")]),s._v(" "),a("ul",[a("li",[s._v("样本的表达矩阵，")]),s._v(" "),a("li",[s._v("基因集，")])]),s._v(" "),a("p",[s._v("示例基因集是"),a("a",{attrs:{href:"https://www.gsea-msigdb.org/gsea/msigdb",target:"_blank",rel:"noopener noreferrer"}},[s._v("MSigDB"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('library(ggplot2) #绘图使用  \nlibrary(ComplexHeatmap) #绘图使用  \nlibrary(clusterProfiler) #数据处理使用  \nlibrary(GSVA) #GSVA使用  \nlibrary(GSEABase) #数据处理使用  \nlibrary(dplyr) #数据处理使用  \nlibrary(data.table) #数据读取使用  \n\nTCGA_BRCA_Exp_tpm <- fread("./Enrichment_analysis/TCGA_BRCA_Exp_tpm.txt",data.table = F)  \ngene_set <- getGmt("./Enrichment_analysis/h.all.v2023.1.Hs.symbols.gmt")  \nTCGA_BRCA_Exp_tpm <- TCGA_BRCA_Exp_tpm[!duplicated(TCGA_BRCA_Exp_tpm$gene_name),] ## 去除重复基因  \ngsva_data <- TCGA_BRCA_Exp_tpm[,-1] #去掉第一列样本名  \nrownames(gsva_data) <- TCGA_BRCA_Exp_tpm$gene_name #行名为基因名\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 这里需要注意的是，输入的表达数据需要`matrix`格式的\ngsva_result <- gsva(as.matrix(gsva_data), gene_set, method = "gsva",min.sz=1, max.sz=Inf,kcdf="Poisson",parallel.sz=1L)\n\n参数解读\n- method: GSVA算法的选择。这里选择了"gsva"，也可以选择""ssgsea。\n- gene_set: 基因集，用于富集分析的基因集合。\n- min.sz: 基因集中允许的最小基因数。默认为1，表示允许基因集中只包含一个基因。\n- max.sz: 基因集中允许的最大基因数。默认为Inf，表示没有最大限制，可以包含任意多个基因。\n- kcdf: 核密度估计的核函数类型。输入counts值使用"Poisson"。输入标准化之后的值(tpm/fpkm)，需要使用"Gaussian"。\n- parallel.sz: 并行计算的规模。设置为1L，表示使用单线程计算。\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"结果分析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果分析-2"}},[s._v("#")]),s._v(" 结果分析")]),s._v(" "),a("p",[s._v("下一步做什么分析呢？")]),s._v(" "),a("ul",[a("li",[s._v("聚类，根据GSVA得到的样本富集得分，可以对样本进行聚类分析")]),s._v(" "),a("li",[s._v("差异分析，使用limma包进行差异分析，获得差异通路")]),s._v(" "),a("li",[s._v("机器学习/深度学习模型输入，构建分类器，对样本进行预测，例如将肿瘤样本与正常样本进行区分，或预测不同临床亚型")]),s._v(" "),a("li",[s._v("与表型关联，得分和临床数据相关联/生物学表型相关联")])]),s._v(" "),a("h3",{attrs:{id:"结果可视化-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果可视化-2"}},[s._v("#")]),s._v(" 结果可视化")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('## 结果绘制热图  \nlibrary(dendextend)  \nlibrary(circlize)  \nlibrary(RColorBrewer)  \ncolors = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(100)  \nvalues <- seq(-0.8, 0.8, length.out = 101)[-101]  \ncol_fun = colorRamp2(values, colors)  \n  \n# 创建注释对象  \nannotation_data <- data.frame(c(rep("normal",111),rep("tumor",111)))  \ncolnames(annotation_data) <- "Type"  \ntop_annotation <- HeatmapAnnotation(df = annotation_data, col = list(Type = c("normal" = "blue", "tumor" = "red")))  \nHeatmap(gsva_result, name = "GSVA", col = col_fun,cluster_rows = T,cluster_columns = F,show_row_names = F,  \n        show_column_names = F,top_annotation = top_annotation,column_split = annotation_data$Type)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("一部分参考：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzIxMDExNDE0OQ==&mid=2247484571&idx=1&sn=feecd2d8b17f946acd40873ffdc1d82f&chksm=9768c791a01f4e87951cb4dbdeb44e1b9cfdd9a377275eb9146ba0cefe2e9a675e4f63b67e3d&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[s._v("R绘图实战|GSEA富集分析图 (qq.com)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=t.exports}}]);