(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{372:function(a,s,e){"use strict";e.r(s);var n=e(7),t=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"cellchat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cellchat"}},[a._v("#")]),a._v(" CellChat")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/sqjin/CellChat",target:"_blank",rel:"noopener noreferrer"}},[a._v("GitHub - sqjin/CellChat: R toolkit for inference, visualization and analysis of cell-cell communication from single-cell data"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("2024-03-13，开始尝试运行，"),s("RouterLink",{attrs:{to:"/_posts/NASH复现记录.html"}},[a._v("NASH复现记录")])],1),a._v(" "),s("p",[a._v("（自我定位）R toolkit for inference, visualization and analysis of cell-cell communication from single-cell and spatially resolved transcriptomics")]),a._v(" "),s("p",[a._v("从单细胞和空间分辨率的转录组中，推断，可视化，分析细胞间的交流")]),a._v(" "),s("p",[a._v("主要分析步骤：")]),a._v(" "),s("ul",[s("li",[a._v("load libraries")]),a._v(" "),s("li",[a._v("input data，initialization CellChat object")]),a._v(" "),s("li",[a._v("Interference "),s("code",[a._v("cell-cell communication network")])]),a._v(" "),s("li",[a._v("Visualization")]),a._v(" "),s("li",[a._v("System analysis")]),a._v(" "),s("li",[a._v("Save and explore")])]),a._v(" "),s("p",[s("strong",[a._v("加载工具包")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("library(CellChat)\nlibrary(patchwork)\noptions(stringsAsFactors = FALSE)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[s("strong",[a._v("输入数据")])]),a._v(" "),s("p",[a._v("其实这一步处理有点多余，因为后续这个包里面的函数有可以直接接收Seurat / Scanpy对象的功能")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('# 从Seurat输入：\ndata.input <- seurat_object[["RNA"]]@data # normalized data matrix\nlabels <- Idents(seurat_object)\nmeta <- data.frame(labels = labels, row.names = names(labels)) # create a dataframe of the cell labels\n\n# 从Scanpy输入：\nlibrary(anndata)\nad <- read_h5ad("scanpy_object.h5ad")\ncounts <- t(as.matrix(ad$X))\n\nlibrary.size <- Matrix::colSums(counts)\ndata.input <- as(log1p(Matrix::t(Matrix::t(counts)/library.size) * 10000), "dgCMatrix")\n\nmeta <- ad$obs \nmeta$labels <- meta[["ad_clusters"]] \n\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("p",[s("strong",[a._v("创建对象")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('# 表达矩阵 和 元数据 矩阵\n（注意大小写，后续使用第一种方法创建对象，所以区分了一下）\ncellchat <- createCellChat(object = data.input, meta = meta, group.by = "labels")\n\n# Seurat对象\ncellChat <- createCellChat(object = seurat.obj, group.by = "ident", assay = "RNA")\n\n\n# Scanpy对象\nsce <- zellkonverter::readH5AD(file = "adata.h5ad")\nassayNames(sce)\ncounts <- assay(sce, "X") # make sure this is the original count data matrix\nlibrary.size <- Matrix::colSums(counts)\nlogcounts(sce) <- log1p(Matrix::t(Matrix::t(counts)/library.size) * 10000)\nmeta <- as.data.frame(SingleCellExperiment::colData(sce)) #\ncellChat <- createCellChat(object = sce, group.by = "sce.clusters")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("p",[s("strong",[a._v("选择受体-配体数据库")]),a._v("（参考受配体信息）")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('# 先查看一下参考受配体信息\nCellChatDB <- CellChatDB.human # CellChatDB.mouse\nshowDatabaseCategory(CellChatDB) # 查看数据库的统计信息\ndplyr::glimpse(CellChatDB$interaction) # 查看受配体信息的结构\n\n\n# 确定使用哪一种数据库（选择一种）\n\nCellChatDB.use <- subsetDB(CellChatDB) # 使用“Non-protein Signaling”之外的所有信息用于细胞间通讯分析\n\nCellChatDB.use <- subsetDB(CellChatDB, search = "Secreted Signaling", key = "annotation") #使用 Secreted Signaling\n\nCellChatDB.use <- subsetDB(CellChatDB, search = list(c("Secreted Signaling"), c("CellChatDB v1")), \n\tkey = c("annotation", "version")) # 只使用CellChatDB v1 的 Secreted Signaling \n\nCellChatDB.use <- CellChatDB # 用全部的/默认的信息；但不建议 -- V2包括非蛋白质信号（像代谢，突触信号）\n\n\n# 最后告诉这个软件\n\ncellchat@DB <- CellChatDB.use\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br")])]),s("p",[s("strong",[a._v("对表达信息进行预处理")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('cellchat <- subsetData(cellchat)  # 提取"传递信号的基因"\nfuture::plan("multisession", workers = 4) # 多线程处理（下面俩是限速步骤）\n\ncellchat <- identifyOverExpressedGenes(cellchat)\ncellchat <- identifyOverExpressedInteractions(cellchat)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[s("strong",[a._v("推断细胞通讯网络")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('# 推断受配体层面的crosstalk\ncellchat <- computeCommunProb(cellchat, type = "triMean")\ncellchat <- computeCommunProb(cellchat, type = "truncatedMean", trim = 0.1)  \n\ncellchat <- filterCommunication(cellchat, min.cells = 10) # 过滤掉低表达的communication\n\n# 推断通路层面的crosstalk\ncellchat <- computeCommunProbPathway(cellchat) \n\n# 计算整合的细胞间 communication network\ncellchat <- aggregateNet(cellchat) # aggregated cell-cell communication network\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("blockquote",[s("p",[a._v("注意一下这里的第一步，如果参数是"),s("code",[a._v("triMean")]),a._v("，则统计出来的crosstalk会更少，会有利于后续的验证  --  producing fewer but stronger interactions；后边的"),s("code",[a._v("truncateMean")]),a._v("的标准会宽松些，产生能够更多的crosstalk")])]),a._v(" "),s("p",[s("strong",[a._v("提取推断信息")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('df.net <- subsetCommunication(cellchat) # 默认ligands/receptor；加上 slot.name = "netP" 则是signaling pathways\n\ndf.net <- subsetCommunication(cellchat, sources.use = c(1,2), targets.use = c(4,5)) # 参考最开始的level顺序\n\ndf.net <- subsetCommunication(cellchat, signaling = c("WNT", "TGFb"))\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[s("strong",[a._v("可视化整合的细胞互作网络")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('groupSize <- as.numeric(table(cellchat@idents))  # 每组细胞数量的一个向量\n\npar(mfrow = c(1,2), xpd=TRUE) # 调整绘图分布的函数：一行两列排列；绘制的内容可以拓展到图形之外\n\nnetVisual_circle(cellchat@net$count, vertex.weight = groupSize, weight.scale = T, label.edge= F, title.name = "Interactions 的数量/ number")\nnetVisual_circle(cellchat@net$weight, vertex.weight = groupSize, weight.scale = T, label.edge= F, title.name = "Interaction 的权重/ weights/strength")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("code",[a._v("netVisual_circle()")]),a._v("  --  该函数用于绘制基于圆形布局的网络图。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("cellchat@net$count")]),a._v(" 和 "),s("code",[a._v("cellchat@net$weight")]),a._v(" 分别表示网络中的边的数量和权重")]),a._v(" "),s("li",[s("code",[a._v("vertex.weight = groupSize")]),a._v("：节点的大小会根据上面计算的个体数进行"),s("strong",[a._v("缩放")])]),a._v(" "),s("li",[s("code",[a._v("weight.scale = T")]),a._v("：根据边的权重进行缩放")]),a._v(" "),s("li",[s("code",[a._v("label.edge = F")]),a._v("：不显示边的标签")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("par(mfrow = c(3,4), xpd=TRUE)\n\n# 逐个绘制细胞与其他细胞的互作\nmat <- cellchat@net$weight\nfor (i in 1:nrow(mat)) {\n  mat2 <- matrix(0, nrow = nrow(mat), ncol = ncol(mat), dimnames = dimnames(mat))\n  mat2[i, ] <- mat[i, ]\n  netVisual_circle(mat2, vertex.weight = groupSize, weight.scale = T, edge.weight.max = max(mat), title.name = rownames(mat)[i])\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[s("strong",[a._v("更多可视化的方法")]),a._v("\n包括：hierarchical plot, circle plot, Chord diagram, and bubble plot")]),a._v(" "),s("p",[a._v("可视化整合的细胞互作网络 -- "),s("strong",[a._v("netVisual_aggregate")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('pathways.show <- c("CXCL")\n\npar(mfrow=c(1,1)) # 设置绘图排列顺序\n\nvertex.receiver = seq(1,4)  \nnetVisual_aggregate(cellchat, signaling = pathways.show, layout = "hierarchy", vertex.receiver =  vertex.receiver,)\n\nnetVisual_aggregate(cellchat, signaling = pathways.show, layout = "circle")\n\nnetVisual_aggregate(cellchat, signaling = pathways.show, layout = "chord")\n\nnetVisual_heatmap(cellchat, signaling = pathways.show, color.heatmap = "Reds")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('# 添加上分组（相当于分类来看细胞互作信息）\ngroup.cellType <- c(rep("FIB", 4), rep("DC", 4), rep("TC", 4))   \nnames(group.cellType) <- levels(cellchat@idents)  \nnetVisual_chord_cell(cellchat, signaling = pathways.show, group = group.cellType, ) #  title.name = paste0(pathways.show, " signaling network")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("可视化单个配体-受体对介导的细胞间通讯 -- "),s("strong",[a._v("netVisual_individual")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('netAnalysis_contribution(cellchat, signaling = pathways.show)\n\npairLR.CXCL <- extractEnrichedLR(cellchat, signaling = pathways.show, geneLR.return = FALSE)  \nLR.show <- pairLR.CXCL[1,] # show one ligand-receptor pair  \n \n\nnetVisual_individual(cellchat, signaling = pathways.show, pairLR.use = LR.show, layout = "hierarchy", vertex.receiver = seq(1,4), \n)\n\nnetVisual_individual(cellchat, signaling = pathways.show, pairLR.use = LR.show, layout = "circle")\n\nnetVisual_individual(cellchat, signaling = pathways.show,   \npairLR.use = LR.show, layout = "chord")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("p",[a._v("可视化全部的通路并保存")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('pathways.show.all <- cellchat@netP$pathways\nlevels(cellchat@idents)  \nvertex.receiver = seq(1,4)\n\nfor (i in 1:length(pathways.show.all)) {    \n  netVisual(cellchat, signaling = pathways.show.all[i], vertex.receiver = vertex.receiver, layout = "hierarchy")  \n  gg <- netAnalysis_contribution(cellchat, signaling = pathways.show.all[i]) \n  ggsave(plot = gg, width = 3,height = 2, units = \'in\', dpi = 300, filename=paste0(pathways.show.all[i], "_L-R_contribution.pdf"), )  \n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("# Visualize communication network associated with both signaling pathway and individual L-R pairs\n# Compute and visualize the contribution of each ligand-receptor pair to the overall signaling pathway")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('netVisual_bubble(cellchat, sources.use = 4, targets.use = c(5:11),   \nremove.isolate = FALSE)\n\nnetVisual_bubble(cellchat, sources.use = 4, targets.use = c(5:11), remove.isolate = FALSE, signaling = c("CCL","CXCL"),)\n\n# 提取显著 受配体 / LR 的信息\npairLR.use <- extractEnrichedLR(cellchat, signaling = c("CCL","CXCL","FGF"))  \nnetVisual_bubble(cellchat, sources.use = c(3,4), targets.use = c(5:8), pairLR.use = pairLR.use, remove.isolate = TRUE)\n\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("netVisual_bubble")]),a._v(" "),s("ul",[s("li",[a._v("source.use：信息来源细胞")]),a._v(" "),s("li",[a._v("target.use：信息接收细胞")]),a._v(" "),s("li",[a._v("remove.isolate：是否在绘图前移除孤立节点，False - 保留 / True - 移除")])]),a._v(" "),s("blockquote",[s("p",[a._v("levels(cellchat@meta$labels)  # 产看细胞种类的顺序\nunique(cellchat@netP$pathways) # 查看所有的通路")])]),a._v(" "),s("p",[a._v("展示所有的互作信息")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('netVisual_chord_gene(cellchat, sources.use = c(1,2,3,4),   \n                     targets.use = c(5:11), slot.name = "netP",   \n                     legend.pos.x = 10)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("通路基因表达量的小提琴图")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('extractEnrichedLR(object = cellchat, signaling = "EPH", enriched.only = F)\n\n\nplotGeneExpression(cellchat, signaling = "EPH")\nplotGeneExpression(cellchat, signaling = "EPH", enriched.only = FALSE)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("网络中心分数 -- network centrality scores")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('cellchat <- netAnalysis_computeCentrality(cellchat, slot.name = "netP") \n  \nnetAnalysis_signalingRole_network(cellchat, signaling = pathways.show, width = 8, height = 2.5, font.size = 10)\n\nnetAnalysis_signalingRole_heatmap(cellchat, signaling = c("CXCL", "CCL"))\n\nnetAnalysis_signalingRole_scatter(cellchat)\nnetAnalysis_signalingRole_scatter(cellchat, signaling = c("CXCL", "CCL"))\n\nht1 <- netAnalysis_signalingRole_heatmap(cellchat, pattern = "outgoing")  \nht2 <- netAnalysis_signalingRole_heatmap(cellchat, pattern = "incoming")  \nht1 + ht2\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("确定全部通信模式，来探索多种细胞类型和信号通路如何协同工作")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('library(NMF)\nlibrary(ggalluvial)\n\n# 识别传出模式\nselectK(cellchat, pattern = "outgoing")\nnPatterns = 3  \ncellchat <- identifyCommunicationPatterns(cellchat, pattern = "outgoing", k = nPatterns)\n\nnetAnalysis_river(cellchat, pattern = "outgoing")\nnetAnalysis_dot(cellchat, pattern = "outgoing")\n\n\n\n# 识别传入模式  \nselectK(cellchat, pattern = "incoming")  \nnPatterns = 4  \ncellchat <- identifyCommunicationPatterns(cellchat, pattern = "incoming", k = nPatterns)  \n\nnetAnalysis_river(cellchat, pattern = "incoming")    \nnetAnalysis_dot(cellchat, pattern = "incoming")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("p",[a._v("参考：")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://htmlpreview.github.io/?https://github.com/jinworks/CellChat/blob/master/tutorial/CellChat-vignette.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Inference and analysis of cell-cell communication using CellChat "),s("OutboundLink")],1),a._v("（官方教程，很不错）")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkxNjI0ODk3Mg==&mid=2247485983&idx=1&sn=c5473bc7ff72575fa674d3f16ffb8503&chksm=c1538afcf62403ea1174dede42ea658a01b34f54a4d5c0fd09cb2523b598624e8878a031875f&cur_album_id=3025306540616220681&scene=189#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[a._v("进一步学习 -- 两组一起比较"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=t.exports}}]);