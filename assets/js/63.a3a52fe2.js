(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{381:function(a,n,e){"use strict";e.r(n);var t=e(7),r=Object(t.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("blockquote",[n("p",[a._v("2024-04-18，昨天处理一些数据，不少处理不熟悉...")])]),a._v(" "),n("p",[a._v("初始化 / 读入\ndata.frame()\nread.csv()\nread.table()/read.tsv()")]),a._v(" "),n("p",[a._v("子集和切片\ndf[rows, cols]\nsubset()")]),a._v(" "),n("p",[a._v("排序和排名\norder()\nrank()")]),a._v(" "),n("p",[a._v("汇总和连接\naggregate()\ntapply()\nmerge()\njoin()\nrbind()\ncbind()")]),a._v(" "),n("p",[a._v("重塑\nreshape()")]),a._v(" "),n("p",[a._v("缺失值\nis.omit() -- 有没有？\nna.omit() -- 删掉")]),a._v(" "),n("p",[a._v("清洗\nduplicated() -- 找到重复的行\nunique() -- 去掉重复的行")]),a._v(" "),n("p",[a._v('subset(data, select = c("colname1", "colname2"))\nsubset(data, colname1 > 10 | colname2 == "value")\nsubset(data, !(colname1 > 10))\nsubset(data, column1 > 10, drop = FALSE) # 只有一行也保留成数据框')]),a._v(" "),n("p",[a._v("#排序\nsubset(data, order(column1))\nsubset(data, rank(column1) <= 5)")]),a._v(" "),n("p",[a._v("order()面对的一般是向量（vector，一行）\norder(-dataframe$column1) # 降序排列 / 数值大小 / 因子水平\ndataframe[order(dataframe$column1), ] # 升序排序后返回行索引，进行排序\ndataframe[order(dataframe$column1, dataframe$column2), ]\nhead(dataframe[order(dataframe$column1), ], n)")]),a._v(" "),n("p",[a._v("rank() # 计算排名，返回排名的数值")]),a._v(" "),n("p",[a._v("aggregate(column, by, FUN) # 对相应列的数据进行分组并汇总统计\naggregate(data$column, by = list(data$group), FUN = mean) # sum，max，min，sd，var，\naggregate(data$column, by = list(data$group), FUN = function(x) quantile(x, probs = c(0.25, 0.5, 0.75))) # 分组计算四分位数")])])}),[],!1,null,null,null);n.default=r.exports}}]);